{
    "build": {
        // Installs latest version from the Distribution
        "dockerfile": "./Dockerfile",
        "context": "."
    },
    "features": {
        "ghcr.io/devcontainers/features/git": {
            "version": "2.49.0",
            "ppa": "true"
        },
        "ghcr.io/devcontainers/features/git-lfs": {
            // Installs the latest version from the Distribution
            "autoPull": "false" // do not automatically pull LFS files when creating the container
        },
        "ghcr.io/devcontainers/features/common-utils": {
            // Installs latest version from the Distribution
            "installZsh": "false",
            "username": "vscode",
			"userUid": "1000",
			"userGid": "1000",
            "upgradePackages": "false" // WARNING: do *not* enable; this would include packages also from other features, which may have been pinned to a specific version
        },
        "ghcr.io/devcontainers-community/features/llvm": {
            // Full semantic version pinning does not work with this feature.
            // In case we want this, the feature needs to be replaced with a custom installation script.
            "version": "20"
        },
        "ghcr.io/devcontainers/features/python": {
            "version": "3.12.11"
        },
        "./s-core-local": {
            "BAZEL_VERSION": "7.5.0",
            "BUILDIFIER_VERSION": "8.2.1",
            // The following sha256sum is for the binary buildifier-linux-amd64
            // from the GitHub release page of buildtools
            // It is generated by running 'sha256sum buildifier-linux-amd64'
            "BUILDIFIER_SHA256": "6ceb7b0ab7cf66fceccc56a027d21d9cc557a7f34af37d2101edb56b92fcfa1a",
            "STARPLS_VERSION": "0.1.21",
            // The following sha256sum is for the binary starpls-linux-amd64
            // from the GitHub release page of starpls
            // It is generated by running 'sha256sum starpls-linux-amd64'
            "STARPLS_SHA256": "45692ecb9d94a19a15b1e7b240acdff5702f78cd22188dac41e1879cb8bdcdcf",
            "BAZEL_COMPILE_COMMANDS_VERSION": "0.17.2",
            // The following sha256sums are for the deb package bazel-compile-commands_<version>-<codename>_amd64.deb
            // where <codename> is the Ubuntu codename (e.g., jammy, focal, noble)
            // and <version> is the version of bazel-compile-commands
            // The format is: <codename>:<sha256sum>;<codename>:<sha256sum>;...
            // For example: jammy:6cde78e1a58c8f9047446cce25a81a676b0f293194175c9fe61586224c0b6f84;noble:97239b316df58fd3370a8aa6350790ececd5e4a1de30efb42d45cb1c300a179a;...
            // It is generated by running 'sha256sum bazel-compile-commands_<version>-<codename>_amd64.deb'
            "BAZEL_COMPILE_COMMANDS_SHA256": "jammy:6cde78e1a58c8f9047446cce25a81a676b0f293194175c9fe61586224c0b6f84;noble:97239b316df58fd3370a8aa6350790ececd5e4a1de30efb42d45cb1c300a179a;focal:c861f4f36cc2884eefbd488f19c49a9674ac093210a503bce032eac8b94b3660",
            // required by the rust-analyzer VS Code extension
            "RUST_ANALYZER_VERSION": "2025-06-30",
            // The following sha256sum is for the binary rust-analyzer-x86_64-unknown-linux-gnu.gz
            // It is generated by running 'sha256sum rust-analyzer-x86_64-unknown-linux-gnu.gz'
            "RUST_ANALYZER_SHA256": "9f40579d05a54ff084e449c3721a3bc8c907aab676e745c78de31c62e74ea778"
        }
    },
    "remoteUser": "vscode",
    "initializeCommand": "mkdir -p ${localEnv:HOME}/.cache/bazel",
    "customizations": {
        "vscode": {
            "extensions": [
                "mads-hartmann.bash-ide-vscode",
                "bazelbuild.vscode-bazel", // Bazel support for Visual Studio Code; see also bazel.lsp.command below
                "dbaeumer.vscode-eslint",
                "EditorConfig.EditorConfig",
                "ms-vscode.live-server", // live preview of HTML files
                "llvm-vs-code-extensions.vscode-clangd",
                "jebbs.plantuml", // preview PlantUML diagrams
                "hediet.vscode-drawio", // Draw.IO integration
                "swyddfa.esbonio", // for Sphinx documentation support
                "rust-lang.rust-analyzer" // Rust language support for Visual Studio Code; see also tasks below
            ],
            "settings": {
                "files.insertFinalNewline": true,
                "editor.formatOnSave": false,
                "[cpp]": {
                    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
                },
                "clangd.path": "/usr/bin/clangd",
                "clangd.arguments": [
                    "--compile-commands-dir=${workspaceFolder}/",
                    "--pretty",
                    "--background-index"
                ],
                "bazel.lsp.command": "/usr/local/bin/starpls", // use the Starlark Language Server for Bazel projects
                "bazel.lsp.args": [
                    "server", // see https://github.com/withered-magic/starpls/issues/400#issuecomment-3095469671 - this is "what developers expect"
                    "--experimental_infer_ctx_attributes",
                    "--experimental_use_code_flow_analysis",
                    "--experimental_enable_label_completions"
                ],
                "C_Cpp.intelliSenseEngine": "disabled",
                "tasks": {
                    "version": "2.0.0",
                    "tasks": [
                        {
                            "label": "Run bazel-compile-commands",
                            "command": "bazel-compile-commands",
                            "type": "shell",
                            "isBackground": true,
                            "hide": true
                        },
                        {
                            "label": "Update compile_commands.json",
                            "command": "${command:clangd.restart}",
                            "isBackground": true,
                            "dependsOn": [
                                "Run bazel-compile-commands"
                            ],
                            "group": {
                                "kind": "build",
                                "isDefault": true
                            }
                        },
                        { // see https://bazelbuild.github.io/rules_rust/rust_analyzer.html#vscode
                            "label": "Update rust-project.json",
                            "command": "bazel",
                            "args": [
                                "run",
                                "@rules_rust//tools/rust_analyzer:gen_rust_project"
                            ],
                            "options": {
                                "cwd": "${workspaceFolder}"
                            },
                            "group": "build"
                        }
                    ]
                }
            }
        }
    }
}
